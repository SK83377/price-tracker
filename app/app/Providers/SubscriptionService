<?php

namespace App\Services;

use Illuminate\Database\QueryException;
use Illuminate\Support\Facades\Log;

use App\Models\Subscription;
use App\Models\User;
use App\Models\Advertisment;

class SubscriptionService
{

    public function subscribe($email, $adUrl)
    {
        try {
            return User::create(['email' => $email]);
        } catch (QueryException $e) {
            // Error code 23000 is the SQLSTATE code for integrity constraint violations
            if ($e->getCode() === '23000') {
                throw new \Exception('A user with this email already exists.');
            }

            // Log or handle other types of database errors
            Log::error($e->getMessage());
            throw new \Exception('Database error: ' . $e->getMessage());
        }
    }

    private function createSubscription($email, $adUrl)
    {
        return Subscription::create([
            'user_id' => $userId,
            'advertisment_id' => $adId,
        ]);
    }

    public function getUserSubscriptions($userId)
    {
        return Subscription::where('user_id', $userId)->with('advertisment')->get();
    }
}